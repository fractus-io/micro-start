<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.fractus.microstart</groupId>
    <artifactId>micro-start-parent-pom</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <name>Micro Start - Platform Parent Pom</name>
	<description>
	Platform Parent pom hold the properties, plugins which are required to build micro start components, microservices, ...
	</description>

	<properties>
	    <micro-start.version>0.0.1-SNAPSHOT</micro-start.version>
		
		<!-- Java version related -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>

        <spring-kafka.version>1.2.2.RELEASE</spring-kafka.version>
        <spring-log4j.version>1.3.3.RELEASE</spring-log4j.version>

        <!-- H2 embedded database version -->
        <h2.version>1.4.195</h2.version>    
		
        <!-- Spring framework version -->
        <spring.version>4.3.11.RELEASE</spring.version>     
        <resource.delimiter>@</resource.delimiter> <!-- delimiter that doesn't clash with Spring ${} placeholders -->
		
        <!-- Spring Boot version -->
        <spring-boot.version>1.5.7.RELEASE</spring-boot.version>
		
        <!-- Spring Boot is using the wrong version so we need to override it with this one -->
        <spring-restdocs.version>1.2.1.RELEASE</spring-restdocs.version>
		
        <!-- Apache Kafka clients version -->
        <kafka-clients.version>0.11.0.1</kafka-clients.version>	

        <!-- asciidoctor -->
        <asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
	
		<!-- versions of other used dependencies -->
		<log4j.version>1.2.17</log4j.version>
		<junit.version>4.12</junit.version>
		<mockito.core.version>2.10.0</mockito.core.version>
		<mockito.all.version>1.10.19</mockito.all.version>
		<commons.logging.version>1.2</commons.logging.version>
        <jackson.version>2.9.1</jackson.version>
		
	</properties>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository> 
    </repositories>

	<dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.RC1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<pluginRepositories>

	</pluginRepositories>

    <build>
        <plugins>
            <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

</project>
